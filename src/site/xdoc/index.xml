<document>
	<properties>
		<author email="robbyb@mailbox.org">
			Robert Bausdorf
		</author>
		<title>Introduction</title>
	</properties>
	<body>
	
		<section name="Introduction">
			<p>
				The
				<em>lib-jpwgen</em>
				is a Java-based password generator library. The implemented
				functionality resembles the one provided by the popular
				<em>pwgen</em>
				program. The
				<em>*nix</em>
				version of
				<em>pwgen</em>
				is available at
				<a href="http://sourceforge.net/projects/pwgen/">
					pwgen
				</a>
				. The basic idea is in generating passwords that
				although relatively easy to remember are complex enough
				for real-life usage.
			</p>
			<p>
				<em>lib-jpwgen</em>
				uses 100% Java and is thus platform independent. It
				extends the
				<em>pwgen</em>
				functionality by the utilizing regular expressions for
				checking different types of conditions such as whether a
				password starts with a symbol or not, with a digit or
				not and so on.
				<em>lib-jpwgen</em>
				supports blacklists and different types of secure random
				generators. As an embedded library it can be employed in
				the process of password generation against certain
				password policies or for password suggestion services.
			</p>
		</section>

		<section name="Description">
			<p>
				<em>lib-jpwgen</em>
				utilizes a predefined set of vowels and consonants that
				are brought together by an iterative algorithm. The
				concept of
				<em>dipthong</em>
				is also used which can represent a consonant or a vowel.
				Typical examples of dipthongs are
				<em>ei</em>
				for vowels and -
				<em>th</em>
				for consonants.
			</p>
			
			<p>

				Various algorithms for random generation can be used for
				feeding the process of password generation. This ensures
				unique password creation.
			</p>
			
			<p>
				See the help for a detailed description or refer to	the
				<a href="./apidocs/index.html">
					Javadoc
				</a>
				.
			</p>
		</section>

	</body>
</document>
